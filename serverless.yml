service: chatr-service
frameworkVersion: '3'

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  dotenv:
    path: .env
    logging: true
  serverless-offline:
    httpPort: 3000
    lambdaPort: 3002
    reloadHandler: true
    ignoreJWTSignature: true
    corsAllowOrigin: "*"
    noPrependStageInUrl: false # ✅ keeps /dev prefix visible in URLs

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-2
  stage: dev

  environment:
    # ✅ Global env vars for all Lambdas
    JWT_SECRET: SuperSecretKey123!
    VITE_API_BASE: https://byu72oz79h.execute-api.eu-west-2.amazonaws.com/dev
    MEMBERS_TABLE: chatr-members
    MESSAGES_TABLE: chatr-messages
    GROUPS_TABLE: chatr-groups
    READ_TRACKING_TABLE: chatr-read-tracking
    ATTACHMENTS_BUCKET: outsec-chat-bucket
    TYPING_TABLE: chatr-typing-status
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'

  iam:
    role:
      statements:
        # ✅ DynamoDB access (all app tables)
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:eu-west-2:*:table/chatr-members
            - arn:aws:dynamodb:eu-west-2:*:table/chatr-messages
            - arn:aws:dynamodb:eu-west-2:*:table/chatr-groups
            - arn:aws:dynamodb:eu-west-2:*:table/chatr-read-tracking
            - arn:aws:dynamodb:eu-west-2:*:table/chatr-typing-status

        # ✅ S3 access
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource:
            - arn:aws:s3:::outsec-chat-bucket
            - arn:aws:s3:::outsec-chat-bucket/*

        # ✅ CloudWatch logging (for all functions)
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:eu-west-2:*:log-group:*

# ============================================================
#                     FUNCTION DEFINITIONS
# ============================================================
functions:
  # --- Auth ---
  auth:
    handler: src/handlers/auth.handler
    events:
      - http:
          path: auth
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false
            methods:
              - OPTIONS
              - POST
      - http:
          path: auth
          method: options
          integration: mock
          request:
            template:
              application/json: '{"statusCode":200}'
          response:
            statusCodes:
              200:
                pattern: ''
                headers:
                  Access-Control-Allow-Origin: "'*'"
                  Access-Control-Allow-Headers: "'Content-Type,Authorization'"
                  Access-Control-Allow-Methods: "'OPTIONS,POST'"

  # --- Register ---
  register:
    handler: src/handlers/register.handler
    events:
      - http:
          path: register
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false
            methods:
              - OPTIONS
              - POST
      - http:
          path: register
          method: options
          integration: mock
          request:
            template:
              application/json: '{"statusCode":200}'
          response:
            statusCodes:
              200:
                pattern: ''
                headers:
                  Access-Control-Allow-Origin: "'*'"
                  Access-Control-Allow-Headers: "'Content-Type,Authorization'"
                  Access-Control-Allow-Methods: "'OPTIONS,POST'"

  # --- Members ---
  members:
    handler: src/handlers/members.handler
    events:
      - http:
          path: members
          method: any
          cors: true

  # --- Messages ---
  messages:
    handler: src/handlers/messages.handler
    events:
      - http:
          path: messages
          method: any
          cors: true
      - http:
          path: messages/{proxy+}
          method: any
          cors: true

  # --- Groups ---
  groups:
    handler: src/handlers/groups.handler
    events:
      - http:
          path: groups
          method: any
          cors: true

  # --- Files ---
  files:
    handler: src/handlers/files.handler
    events:
      - http:
          path: files
          method: any
          cors: true

  # --- Attachments (Download) ---
  getAttachment:
    handler: src/handlers/getAttachment.handler
    events:
      - http:
          path: attachments
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                key: true

  # --- Typing Indicators ---
  typing:
    handler: src/handlers/typing.handler
    events:
      - http:
          path: typing/start
          method: post
          cors: true
      - http:
          path: typing/stop
          method: post
          cors: true
      - http:
          path: typing
          method: get
          cors: true
